<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="0" total="7" passed="5">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="7327" started-at="2022-08-17T14:48:06Z" finished-at="2022-08-17T14:48:13Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="7327" started-at="2022-08-17T14:48:06Z" finished-at="2022-08-17T14:48:13Z">
      <class name="com.spotify.oauth2.test.PlaylistAPITests">
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.spotify.oauth2.test.PlaylistAPITests@4d666b41]" name="beforeMethod" is-config="true" duration-ms="16" started-at="2022-08-17T20:18:06Z" finished-at="2022-08-17T20:18:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.spotify.oauth2.test.PlaylistAPITests.getSinglePlaylist()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="getSinglePlaylist()[pri:0, instance:com.spotify.oauth2.test.PlaylistAPITests@4d666b41]" name="getSinglePlaylist" duration-ms="5075" started-at="2022-08-17T20:18:06Z" description="Verify Playlist detail using Playlist ID" finished-at="2022-08-17T20:18:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSinglePlaylist -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.spotify.oauth2.test.PlaylistAPITests@4d666b41]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2022-08-17T20:18:11Z" finished-at="2022-08-17T20:18:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.spotify.oauth2.test.PlaylistAPITests.createPlaylist()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="createPlaylist()[pri:1, instance:com.spotify.oauth2.test.PlaylistAPITests@4d666b41]" name="createPlaylist" duration-ms="577" started-at="2022-08-17T20:18:11Z" description="Verify create Playlist using User ID" finished-at="2022-08-17T20:18:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPlaylist -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.spotify.oauth2.test.PlaylistAPITests@4d666b41]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2022-08-17T20:18:12Z" finished-at="2022-08-17T20:18:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.spotify.oauth2.test.PlaylistAPITests.updateSinglePlaylistDetail()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="updateSinglePlaylistDetail()[pri:2, instance:com.spotify.oauth2.test.PlaylistAPITests@4d666b41]" name="updateSinglePlaylistDetail" duration-ms="388" started-at="2022-08-17T20:18:12Z" description="Verify update Playlist detail using Playlist ID" finished-at="2022-08-17T20:18:12Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected content-type "JSON" doesn't match actual content-type "".
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected content-type "JSON" doesn't match actual content-type "".

	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:80)
	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:74)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:59)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:237)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:249)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.validate(ResponseSpecificationImpl.groovy:92)
	at io.restassured.internal.ValidatableResponseOptionsImpl.spec(ValidatableResponseOptionsImpl.java:288)
	at io.restassured.internal.ValidatableResponseImpl.super$2$spec(ValidatableResponseImpl.groovy)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:101)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1217)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
	at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy:76)
	at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy)
	at com.spotify.oauth2.api.RestResource.put(RestResource.java:40)
	at com.spotify.oauth2.api.applicationapi.PlaylistAPI.put(PlaylistAPI.java:39)
	at com.spotify.oauth2.test.PlaylistAPITests.updateSinglePlaylistDetail(PlaylistAPITests.java:91)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateSinglePlaylistDetail -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.spotify.oauth2.test.PlaylistAPITests@4d666b41]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2022-08-17T20:18:12Z" finished-at="2022-08-17T20:18:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.spotify.oauth2.test.PlaylistAPITests.getSingleUserAllPlaylist()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="getSingleUserAllPlaylist()[pri:3, instance:com.spotify.oauth2.test.PlaylistAPITests@4d666b41]" name="getSingleUserAllPlaylist" duration-ms="288" started-at="2022-08-17T20:18:12Z" description="Verify all Playlist for particular User using User ID" finished-at="2022-08-17T20:18:12Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expected: iterable with items ["Dilip Walk Playlist", "Dilip Walk Playlist", "Dilip Walk Playlist", "Dilip Walk Playlist", "Dilip Walk Playlist", "Dilip Walk Playlist", "Dilip Walk Playlist", "Dilip Walk Playlist", "Dilip Walk Playlist", "Dilip Walk Playlist", "Dilip Walk Playlist", "Dilip Walk Playlist", "Dilip Walk Playlist", "Dilip Walk Playlist", "Dilip Walk Playlist", "Dilip Cardio Playlist", "Dilip Gym Playlist", "Dilip Talk Playlist", "Dilip Empty Playlist", "Dilip Learning Playlist", "Dilip Timepass Playlist", "Dilip Trace Playlist"] in any order
     but: not matched: "Playlist,---__o_3,M 6_-j8a _"]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expected: iterable with items ["Dilip Walk Playlist", "Dilip Walk Playlist", "Dilip Walk Playlist", "Dilip Walk Playlist", "Dilip Walk Playlist", "Dilip Walk Playlist", "Dilip Walk Playlist", "Dilip Walk Playlist", "Dilip Walk Playlist", "Dilip Walk Playlist", "Dilip Walk Playlist", "Dilip Walk Playlist", "Dilip Walk Playlist", "Dilip Walk Playlist", "Dilip Walk Playlist", "Dilip Cardio Playlist", "Dilip Gym Playlist", "Dilip Talk Playlist", "Dilip Empty Playlist", "Dilip Learning Playlist", "Dilip Timepass Playlist", "Dilip Trace Playlist"] in any order
     but: not matched: "Playlist,---__o_3,M 6_-j8a _"
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18)
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)
	at com.spotify.oauth2.test.PlaylistAPITests.getSingleUserAllPlaylist(PlaylistAPITests.java:115)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSingleUserAllPlaylist -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.spotify.oauth2.test.PlaylistAPITests@4d666b41]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2022-08-17T20:18:12Z" finished-at="2022-08-17T20:18:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.spotify.oauth2.test.PlaylistAPITests.notAbleToCreatePlaylistWithEmptyName()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="notAbleToCreatePlaylistWithEmptyName()[pri:4, instance:com.spotify.oauth2.test.PlaylistAPITests@4d666b41]" name="notAbleToCreatePlaylistWithEmptyName" duration-ms="362" started-at="2022-08-17T20:18:12Z" description="Verify create playlist with empty name" finished-at="2022-08-17T20:18:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- notAbleToCreatePlaylistWithEmptyName -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.spotify.oauth2.test.PlaylistAPITests@4d666b41]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2022-08-17T20:18:13Z" finished-at="2022-08-17T20:18:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.spotify.oauth2.test.PlaylistAPITests.notAbleToCreatePlaylistUsingInvalidAccessToken()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="notAbleToCreatePlaylistUsingInvalidAccessToken()[pri:5, instance:com.spotify.oauth2.test.PlaylistAPITests@4d666b41]" name="notAbleToCreatePlaylistUsingInvalidAccessToken" duration-ms="191" started-at="2022-08-17T20:18:13Z" description="Verify create playlist using invalid access token" finished-at="2022-08-17T20:18:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- notAbleToCreatePlaylistUsingInvalidAccessToken -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.spotify.oauth2.test.PlaylistAPITests@4d666b41]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2022-08-17T20:18:13Z" finished-at="2022-08-17T20:18:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.spotify.oauth2.test.PlaylistAPITests.notAbleToCreatePlaylistUsingExpiredAccessToken()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="notAbleToCreatePlaylistUsingExpiredAccessToken()[pri:6, instance:com.spotify.oauth2.test.PlaylistAPITests@4d666b41]" name="notAbleToCreatePlaylistUsingExpiredAccessToken" duration-ms="210" started-at="2022-08-17T20:18:13Z" description="Verify create playlist using expired access token" finished-at="2022-08-17T20:18:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- notAbleToCreatePlaylistUsingExpiredAccessToken -->
      </class> <!-- com.spotify.oauth2.test.PlaylistAPITests -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
