{"uuid":"e5737d24-2987-4370-ac25-b80c4b741546","historyId":"d297b7a92bba9c3645187723ed0f2671","fullName":"com.spotify.oauth2.test.PlaylistAPITests.getSingleUserAllPlaylist","labels":[{"name":"package","value":"com.spotify.oauth2.test.PlaylistAPITests"},{"name":"testClass","value":"com.spotify.oauth2.test.PlaylistAPITests"},{"name":"testMethod","value":"getSingleUserAllPlaylist"},{"name":"parentSuite","value":"PlaylistAPISuite"},{"name":"suite","value":"PlaylistAPICRUDTest"},{"name":"subSuite","value":"com.spotify.oauth2.test.PlaylistAPITests"},{"name":"host","value":"G4XCQHG3E"},{"name":"thread","value":"30732@G4XCQHG3E.main(1)"},{"name":"framework","value":"testng"},{"name":"language","value":"java"},{"name":"feature","value":"Playlist API"},{"name":"story","value":"Playlist CRUD Operation"},{"name":"severity","value":"critical"}],"links":[],"name":"Verify all Playlist for particular User using User ID","status":"failed","statusDetails":{"known":false,"muted":false,"flaky":false,"message":"\nExpected: iterable with items [\"Dilip Walk Playlist\", \"Dilip Walk Playlist\", \"Dilip Walk Playlist\", \"Dilip Walk Playlist\", \"Dilip Walk Playlist\", \"Dilip Walk Playlist\", \"Dilip Walk Playlist\", \"Dilip Walk Playlist\", \"Dilip Walk Playlist\", \"Dilip Walk Playlist\", \"Dilip Walk Playlist\", \"Dilip Walk Playlist\", \"Dilip Walk Playlist\", \"Dilip Walk Playlist\", \"Dilip Walk Playlist\", \"Dilip Cardio Playlist\", \"Dilip Gym Playlist\", \"Dilip Talk Playlist\", \"Dilip Empty Playlist\", \"Dilip Learning Playlist\", \"Dilip Timepass Playlist\", \"Dilip Trace Playlist\"] in any order\n     but: not matched: \"Dilip Walk Playlist\"","trace":"java.lang.AssertionError: \nExpected: iterable with items [\"Dilip Walk Playlist\", \"Dilip Walk Playlist\", \"Dilip Walk Playlist\", \"Dilip Walk Playlist\", \"Dilip Walk Playlist\", \"Dilip Walk Playlist\", \"Dilip Walk Playlist\", \"Dilip Walk Playlist\", \"Dilip Walk Playlist\", \"Dilip Walk Playlist\", \"Dilip Walk Playlist\", \"Dilip Walk Playlist\", \"Dilip Walk Playlist\", \"Dilip Walk Playlist\", \"Dilip Walk Playlist\", \"Dilip Cardio Playlist\", \"Dilip Gym Playlist\", \"Dilip Talk Playlist\", \"Dilip Empty Playlist\", \"Dilip Learning Playlist\", \"Dilip Timepass Playlist\", \"Dilip Trace Playlist\"] in any order\n     but: not matched: \"Dilip Walk Playlist\"\r\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18)\r\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)\r\n\tat com.spotify.oauth2.test.PlaylistAPITests.getSingleUserAllPlaylist(PlaylistAPITests.java:95)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)\r\n\tat org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)\r\n\tat org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)\r\n\tat org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)\r\n\tat org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)\r\n\tat org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)\r\n\tat java.util.ArrayList.forEach(ArrayList.java:1259)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:794)\r\n\tat org.testng.TestRunner.run(TestRunner.java:596)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:377)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:276)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1134)\r\n\tat org.testng.TestNG.runSuites(TestNG.java:1063)\r\n\tat org.testng.TestNG.run(TestNG.java:1031)\r\n\tat org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:324)\r\n\tat org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:74)\r\n\tat org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:123)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:456)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:169)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:595)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:581)\r\n"},"stage":"finished","description":"User should be able to get all the Playlist for a particular User using User ID","steps":[{"name":"getAllPlaylist","status":"passed","stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1660710891191,"stop":1660710891557},{"name":"assertStatusCode","status":"passed","stage":"finished","steps":[],"attachments":[],"parameters":[{"name":"actualStatusCode","value":"200"},{"name":"expectedStatusCode","value":"200"}],"start":1660710891557,"stop":1660710891557}],"attachments":[],"parameters":[],"start":1660710891191,"stop":1660710891606}